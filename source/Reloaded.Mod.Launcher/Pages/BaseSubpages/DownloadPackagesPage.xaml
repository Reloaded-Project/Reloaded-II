<pages:ReloadedIIPage x:Class="Reloaded.Mod.Launcher.Pages.BaseSubpages.DownloadPackagesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:converters="clr-namespace:Reloaded.Mod.Launcher.Converters"
      xmlns:pages="clr-namespace:Reloaded.Mod.Launcher.Pages"
      xmlns:utility="clr-namespace:Reloaded.Mod.Launcher.Utility"
      xmlns:controls="clr-namespace:Reloaded.WPF.Controls;assembly=Reloaded.WPF"
      xmlns:panels="clr-namespace:Reloaded.Mod.Launcher.Controls.Panels"
      xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="756"
      AllowDrop="True"
      Title="{DynamicResource TitleDownloadMods}">
    <Grid x:Name="Contents" DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}}}">

        <Grid.Resources>
            <CollectionViewSource x:Key="FilteredPackages" Source="{Binding SearchResult, UpdateSourceTrigger=PropertyChanged}" IsLiveFilteringRequested="True"/>
        </Grid.Resources>

        <!-- Actual Grid -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Settings Popup -->
        <Popup IsOpen="{Binding IsChecked, ElementName=SettingsBtn}" x:Name="OptionsPopup" StaysOpen="False" 
               AllowsTransparency="True"
               PlacementTarget="{Binding ElementName=SettingsBtn}"
               Placement="Left"
               HorizontalAlignment="Right" 
               VerticalAlignment="Top"
               Opened="OptionsPopup_Opened"
               Panel.ZIndex="9999">
            <Border Background="{DynamicResource PopupBackgroundBrush}" Padding="{DynamicResource TooltipPaddingSize}" CornerRadius="{DynamicResource TooltipCornerRadius}">

                <StackPanel>

                    <!-- Sorting Mode -->
                    <ComboBox Margin="{DynamicResource CommonItemCombinedMargin}" 
                              IsSynchronizedWithCurrentItem="True"
                              SelectedItem="{Binding SortingMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              ItemsSource="{Binding SortingModes, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="{DynamicResource SearchOptionsTooltip}"
                              ToolTipService.InitialShowDelay="0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FriendlyName, Mode=OneTime}" FontSize="{DynamicResource FontSizeLarger}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!-- Hide Installed Toggle -->
                    <CheckBox Margin="{DynamicResource CommonItemCombinedMargin}" 
                              Content="{DynamicResource DownloadPackagesSettingHide}"
                              IsChecked="{Binding HideInstalled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="{DynamicResource DownloadPackagesSettingHideTooltip}" ToolTipService.InitialShowDelay="0"
                              x:Name="HideInstalledCheck"/>

                    <!-- NuGet -->
                    <Button Margin="{DynamicResource CommonItemCombinedMargin}" 
                            Command="{Binding ConfigureNuGetSourcesCommand}"
                            VerticalAlignment="Stretch">

                        <StackPanel Orientation="Horizontal">
                            <Viewbox Margin="{DynamicResource SVGIconToTextMargin}" MaxHeight="{Binding ElementName=NuGetBtnText, Path=ActualHeight}">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="{DynamicResource TextColorBrush}" Data="{DynamicResource IconGeometryConfig}" />
                                </Canvas>
                            </Viewbox>
                            <TextBlock Text="{DynamicResource DownloadsMenuNuGetButton}" 
                                       Name="NuGetBtnText"
                                       FontSize="{DynamicResource FontSizeLarger}"
                                       Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>

                    <!-- Close -->
                    <Button Margin="{DynamicResource CommonItemCombinedMargin}" 
                            Content="{DynamicResource DownloadsPackagePreviewClose}"
                            Click="CloseSettingsPopup" VerticalAlignment="Stretch"/>

                </StackPanel>
            </Border>
        </Popup>

        <!-- Search -->
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Margin="{StaticResource CommonItemVerticalMarginSmall}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>

            <!-- Source -->
            <ComboBox Grid.Column="0"
                      Margin="{DynamicResource CommonItemHorizontalMarginSmaller}"
                      IsSynchronizedWithCurrentItem="True"
                      SelectedItem="{Binding CurrentPackageProvider, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding PackageProviders, UpdateSourceTrigger=PropertyChanged}"
                      MaxHeight="{Binding ActualHeight, ElementName=TextBox}"
                      Width="150" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding FriendlyName, Mode=OneTime}" FontSize="{DynamicResource FontSizeLarger}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!-- Search -->
            <TextBox 
                x:Name="TextBox"
                Grid.Column="1"
                Style="{DynamicResource TextboxWithPlaceholder}" 
                Tag="{DynamicResource ModManagerSearchMods}"
                Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Margin="{DynamicResource CommonItemHorizontalMarginSmaller}"
                FontSize="{DynamicResource FontSizeLarger}"
                VerticalAlignment="Center" HorizontalAlignment="Stretch" />

            <!-- Download -->
            <Button Margin="{DynamicResource CommonItemHorizontalMarginSmaller}" 
                    Command="{Binding DownloadModCommand, UpdateSourceTrigger=PropertyChanged}"
                    Grid.Column="2"
                    VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal" Margin="0,-50">
                    <Viewbox Margin="{DynamicResource SVGIconToTextMargin}" MaxHeight="{Binding ElementName=DownloadBtnText, Path=ActualHeight}">
                        <Canvas Width="24" Height="24">
                            <Path Fill="{DynamicResource TextColorBrush}" Data="{DynamicResource IconGeometryDownload}" />
                        </Canvas>
                    </Viewbox>

                    <TextBlock Text="{Binding DownloadPackageStatus, Converter={x:Static converters:DownloadModStatusToString.Instance}, FallbackValue='Download'}" 
                               Name="DownloadBtnText"
                               FontSize="{DynamicResource FontSizeLarger}"
                               Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" />
                </StackPanel>
            </Button>

            <!-- Settings Popup -->
            <ToggleButton Grid.Column="3" x:Name="SettingsBtn"
                          Margin="{DynamicResource CommonItemHorizontalMarginSmaller}" 
                          IsHitTestVisible="{Binding ElementName=OptionsPopup, Path=IsOpen, Mode=OneWay, Converter={x:Static converters:BooleanInverterConverter.Instance}}"
                          Style="{DynamicResource PopupToggleButton}">
                <Viewbox>
                    <Canvas Width="24" Height="24">
                        <Path Fill="{DynamicResource TextColorBrush}" Data="{DynamicResource IconGeometryConfig}" />
                    </Canvas>
                </Viewbox>
            </ToggleButton>

            <!-- Prev/Next -->
            <!-- Icons sourced from https://materialdesignicons.com, under MIT -->
            <!-- Note: VS Preview doesn't get height right for these buttons, it's ok at runtime, dw -->
            <Button Style="{DynamicResource UnpaddedButton}" Height="Auto"
                    Margin="{DynamicResource CommonItemHorizontalMarginSmaller}" 
                    Grid.Column="4"
                    Click="Last_Click"
                    Visibility="{Binding CanGoToLastPage, Converter={x:Static converters:BooleanToVisibilityConverter.InstanceCollapsed}}"
                    VerticalContentAlignment="Center">
                <Viewbox>
                    <Canvas Width="24" Height="24">
                        <Path Fill="{DynamicResource TextColorBrush}" Data="{DynamicResource IconGeometryPrevious}" />
                    </Canvas>
                </Viewbox>
            </Button>

            <Button Style="{DynamicResource UnpaddedButton}" Height="Auto"
                    Margin="{DynamicResource CommonItemHorizontalMarginSmaller}" 
                    Grid.Column="5"
                    Click="Next_Click"
                    Visibility="{Binding CanGoToNextPage, Converter={x:Static converters:BooleanToVisibilityConverter.InstanceCollapsed}}"
                    VerticalContentAlignment="Center">
                <Viewbox>
                    <Canvas Width="24" Height="24">
                        <Path Fill="{DynamicResource TextColorBrush}" Data="{DynamicResource IconGeometryNext}" />
                    </Canvas>
                </Viewbox>
            </Button>
        </Grid>

        <!-- List -->
        <ListView Focusable="False"
                  Grid.Row="1"
                  HorizontalAlignment="Stretch"
                  ItemsSource="{Binding Source={StaticResource FilteredPackages}}"
                  SelectedItem="{Binding SelectedResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  VerticalAlignment="Stretch"
                  VerticalContentAlignment="Top"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  PreviewKeyDown="OnPressKeyInListView"
                  IsSynchronizedWithCurrentItem="True">

            <!-- Wrap all the elementssss -->
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <panels:VirtualizedCardPanel ColumnWidth="300" ItemWidth="300" ItemHeight="225"
                                                 IsVirtualizing="True" VirtualizationMode="Recycling"
                                                 CallMeasureOnChildren="False" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <!-- Redefine the container for our cards. Helps with theme backwards compatibility. -->
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource ReloadedFocusVisual}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <!-- This is not clear XAML but we have to try really hard to optimise for perf here. -->
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid MouseDown="OnClickCard" Background="{TemplateBinding Background}">
                                    <panels:OverlappingElementsPanel Margin="3">
                                        <!-- Image -->
                                        <Image RenderOptions.BitmapScalingMode="HighQuality" Style="{x:Null}" OverridesDefaultStyle="True"
                                               Width="300" Height="225" Panel.ZIndex="0" Loaded="OnPreviewImageLoaded" />

                                        <!-- Info Overlay: Top -->
                                        <Border Panel.ZIndex="1" VerticalAlignment="Top" Style="{x:Null}" OverridesDefaultStyle="True"
                                                Background="{StaticResource TooltipBackgroundColorBrush}">
                                            <!-- Name -->
                                            <TextBlock Text="{Binding Name}" Style="{StaticResource DownloadModTitleTextBlock}" OverridesDefaultStyle="True"
                                                       HorizontalAlignment="Center" TextWrapping="WrapWithOverflow"/>
                                        </Border>

                                        <!-- Info Overlay: Bottom -->
                                        <StackPanel Name="BottomInfoPanel" Orientation="Vertical" Panel.ZIndex="1" VerticalAlignment="Bottom" Background="{StaticResource TooltipBackgroundColorBrush}" Style="{x:Null}" OverridesDefaultStyle="True">

                                            <!-- Avatar & Author -->
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding DownloadCount, Converter={x:Static converters:NotNullToVisibleConverter.Instance}}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                <Viewbox Grid.Column="0" MaxHeight="{Binding ElementName=AuthorBtnText, Path=ActualHeight}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                    <Canvas Width="24" Height="24" Style="{x:Null}" OverridesDefaultStyle="True">
                                                        <Path Fill="{StaticResource TextColorBrush}" Data="{StaticResource IconGeometryAuthor}" Style="{x:Null}" OverridesDefaultStyle="True"/>
                                                    </Canvas>
                                                </Viewbox>

                                                <TextBlock Text="{Binding Submitter.UserName}" Grid.Column="1"
                                                           Visibility="{Binding Submitter, Converter={x:Static converters:NotNullToVisibleConverter.Instance}}" 
                                                           Style="{StaticResource DownloadModTitleTextBlock}" OverridesDefaultStyle="True"
                                                           TextTrimming="CharacterEllipsis" 
                                                           Name="AuthorBtnText"/>
                                            </StackPanel>

                                            <!-- Stats -->
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Style="{x:Null}" OverridesDefaultStyle="True"
                                                        utility:MarginSetter.Enable="True" utility:MarginSetter.Margin="{StaticResource DownloadMenuHorizontalItemMargin}" utility:MarginSetter.LastItemMargin="0">

                                                <!-- Download -->
                                                <StackPanel Orientation="Horizontal" Visibility="{Binding DownloadCount, Converter={x:Static converters:NotNullToVisibleConverter.Instance}}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                    <Viewbox Margin="{StaticResource SVGIconToTextMargin}" MaxHeight="{Binding ElementName=DownloadCountText, Path=ActualHeight}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                        <Canvas Width="24" Height="24" Style="{x:Null}" OverridesDefaultStyle="True">
                                                            <Path Fill="{StaticResource TextColorBrush}" Data="{StaticResource IconGeometryDownload}" Style="{x:Null}" OverridesDefaultStyle="True"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                    <TextBlock Name="DownloadCountText" Text="{Binding DownloadCount}" Style="{StaticResource DownloadModTitleTextBlock}" OverridesDefaultStyle="True"/>
                                                </StackPanel>

                                                <!-- View -->
                                                <StackPanel Orientation="Horizontal" Visibility="{Binding ViewCount, Converter={x:Static converters:NotNullToVisibleConverter.Instance}}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                    <Viewbox Margin="{StaticResource SVGIconToTextMargin}" MaxHeight="{Binding ElementName=DownloadCountText, Path=ActualHeight}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                        <Canvas Width="24" Height="24" Style="{x:Null}" OverridesDefaultStyle="True">
                                                            <Path Fill="{StaticResource TextColorBrush}" Data="{StaticResource IconGeometryView}" Style="{x:Null}" OverridesDefaultStyle="True"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                    <TextBlock Text="{Binding ViewCount}" Style="{StaticResource DownloadModTitleTextBlock}" OverridesDefaultStyle="True" />
                                                </StackPanel>

                                                <!-- Like -->
                                                <StackPanel Orientation="Horizontal" Visibility="{Binding LikeCount, Converter={x:Static converters:NotNullToVisibleConverter.Instance}}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                    <Viewbox Margin="{StaticResource SVGIconToTextMargin}" MaxHeight="{Binding ElementName=DownloadCountText, Path=ActualHeight}" Style="{x:Null}" OverridesDefaultStyle="True">
                                                        <Canvas Width="24" Height="24" Style="{x:Null}" OverridesDefaultStyle="True">
                                                            <Path Fill="{StaticResource TextColorBrush}" Data="{StaticResource IconGeometryLike}" Style="{x:Null}" OverridesDefaultStyle="True"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                    <TextBlock Text="{Binding LikeCount}" Style="{StaticResource DownloadModTitleTextBlock}" OverridesDefaultStyle="True"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </panels:OverlappingElementsPanel>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeBackgroundToBorderDark}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource BackgroundFadeBorderDarkToBackground}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <!-- Current Item Overlay -->
        <controls:PageHost Grid.Row="0" Grid.RowSpan="2" x:Name="CurrentModPageHost" Panel.ZIndex="9999" />
    </Grid>
</pages:ReloadedIIPage>
